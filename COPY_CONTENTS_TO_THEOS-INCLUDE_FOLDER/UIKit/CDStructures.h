/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */
#error
@class UIImage, UIView;

struct $_154 {
    unsigned int sort_key:8;
    unsigned int more_siblings:1;
    unsigned int has_freq:1;
    unsigned int has_words:1;
    unsigned int child_offset32:21;
};

struct $_155 {
    unsigned int sort_key:8;
    unsigned int more_siblings:1;
    unsigned int has_freq:1;
    unsigned int has_words:1;
    unsigned int child_offset32:21;
};

struct $_156 {
    unsigned int sort_key:8;
    unsigned int more_siblings:1;
    unsigned int has_freq_or_words:2;
    unsigned int child_offset32:21;
};

struct $_157 {
    unsigned int compacted_freq:8;
    unsigned int word_is_0freq:1;
    unsigned int word_offset:23;
};

struct $_158 {
    unsigned int compacted_freq:8;
    unsigned int word_is_0freq:1;
    unsigned int word_offset:23;
};

struct Bucket<KB::String, KB::Word>;

struct DynamicDictionary {
    struct DynamicDictionaryImpl *m_impl;
    int m_log_level;
};

struct DynamicDictionaryImpl;

struct HashTraits<KB::String>;

struct Hashmap<KB::String, KB::Word> {
    unsigned int m_size;
    unsigned int m_capacity;
    unsigned int m_table_size;
    unsigned int m_extra_size;
    unsigned int m_extra_index;
    _Bool m_rehashing;
    struct HashTraits<KB::String> m_traits;
    struct Bucket<KB::String, KB::Word> *m_table;
    struct Bucket<KB::String, KB::Word> *m_extra;
};

struct Input;

struct KBInputManagerAlphabet {
    void **_field1;
    struct StaticDictionaryAlphabet _field2;
    struct Vector<KB::Input> _field3;
    struct String _field4;
    struct String _field5;
    struct Vector<KB::String> _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct Hashmap<KB::String, KB::Word> _field9;
    struct Vector<KB::Word> _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    int _field15;
    struct DynamicDictionary _field16;
    _Bool _field17;
    struct __CFDictionary *_field18;
    struct __CFArray *_field19;
};

struct KBInputManagerZephyr {
    void **_field1;
    struct StaticDictionaryAlphabet _field2;
    struct Vector<KB::Input> _field3;
    struct String _field4;
    struct String _field5;
    struct Vector<KB::String> _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct Hashmap<KB::String, KB::Word> _field9;
    struct Vector<KB::Word> _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    int _field15;
    struct DynamicDictionary _field16;
    struct StrokeBuildManager _field17;
    struct SortedKeyLayout _field18;
};

struct KeyArea;

struct PackedTrieSibling {
    union {
        unsigned int whole;
        struct $_155 fields;
        struct $_156 file_fields;
    } sortNchild;
    union {
        unsigned int whole;
        struct $_158 fields;
    } freqNword;
};

struct ReadOnlyDataFile;

struct RefPtr<KB::WordTrieNode> {
    struct WordTrieNode *m_ptr;
};

struct SortedKeyLayout {
    unsigned int m_size;
    unsigned int m_capacity;
    struct KeyArea *m_elements;
    struct KeyArea *m_nearestKeys[13];
    int m_numNearestKeys;
    int m_nearestIteratorIndex;
    float m_nearestSearchRadiusSQE;
    struct CGPoint m_coordinateForNearestSort;
    _Bool m_isAlphabeticLayout;
    float m_leftmostXcentroid;
    float m_rightmostXcentroid;
};

struct StaticDictionaryAlphabet {
    void **_vptr$StaticDictionary;
    struct WordTrie m_trie;
    int m_log_level;
};

struct String {
    unsigned short m_size;
    unsigned short m_capacity;
    unsigned short m_length;
    unsigned short m_sort_key_length;
    unsigned char m_buffer_type;
    char *m_buffer;
    char m_static_buffer[16];
};

struct StrokeBuildManager {
    void **_vptr$StrokeBuildManager;
    _Bool m_inputManagerDisrupted;
};

struct UIKeyboardAnimationGeometry {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGRect _field3;
    struct CGAffineTransform _field4;
};

struct Vector<KB::Input> {
    unsigned int m_size;
    unsigned int m_capacity;
    struct Input *m_elements;
};

struct Vector<KB::String> {
    unsigned int m_size;
    unsigned int m_capacity;
    struct String *m_elements;
};

struct Vector<KB::Word> {
    unsigned int m_size;
    unsigned int m_capacity;
    struct Word *m_elements;
};

struct Vector<WTF::RefPtr<KB::WordTrieNode>, 0ul> {
    unsigned int m_size;
    struct VectorBuffer<WTF::RefPtr<KB::WordTrieNode>, 0ul> m_buffer;
};

struct VectorBuffer<WTF::RefPtr<KB::WordTrieNode>, 0ul> {
    struct RefPtr<KB::WordTrieNode> *m_buffer;
    unsigned int m_capacity;
};

struct WKView;

struct WKWindow {
    struct _WKObject _field1;
    struct CGRect _field2;
    struct WKView *_field3;
    struct WKView *_field4;
    struct __GSEvent *_field5;
    void *_field6;
    void *_field7;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct Word;

struct WordTrie {
    struct ReadOnlyDataFile *m_index;
    struct ReadOnlyDataFile *m_words;
    unsigned int m_word_count;
    struct RefPtr<KB::WordTrieNode> m_root;
    struct WordTrieSearch m_search;
    struct WordTrieSearch m_saved_search;
    _Bool m_returns_words_shorter_than_search;
    _Bool m_valid;
    struct PackedTrieSibling m_root_siblings_array_cache[256];
    struct PackedTrieSibling m_deep_siblings_list_cache[256];
    unsigned int m_num_deep_siblings;
    unsigned int m_first_deep_sibling_offset;
};

struct WordTrieNode;

struct WordTrieSearch {
    struct Vector<WTF::RefPtr<KB::WordTrieNode>, 0ul> m_states;
    int m_type;
    struct String m_string;
    struct String m_sort_key;
};

struct _DictEntry {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _NSZone;

struct _WKClassInfo;

struct _WKObject {
    unsigned int referenceCount;
    struct _WKClassInfo *classInfo;
};

struct _WKQuad {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct __CFArray;

struct __CFCharacterSet;

struct __CFData;

struct __CFDateFormatter;

struct __CFDictionary;

struct __CFMachPort;

struct __CFRunLoopObserver;

struct __CFString;

struct __CFTimeZone;

struct __GSEvent;

struct __GSHeartbeat;

struct __GSWindow;

struct __SCNetworkReachability;

typedef struct {
    int _field1;
    int _field2;
    id _field3;
    id _field4;
    float _field5;
    int _field6;
    SEL _field7;
    id _field8;
} CDAnonymousStruct3;

typedef struct {
    double width;
    double height;
} CDAnonymousStruct1;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
} CDAnonymousStruct11;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
} CDAnonymousStruct15;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDAnonymousStruct4;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char _field5;
    char _field6;
} CDAnonymousStruct5;

typedef struct {
    float _field1;
    float _field2;
} CDAnonymousStruct6;

typedef struct {
    unsigned int numberOfRows:7;
    unsigned int delegateAlertSheetButtonClicked:1;
    unsigned int delegateDidPresentAlertSheet:1;
    unsigned int delegateDidDismissAlertSheet:1;
    unsigned int hideButtonBar:1;
    unsigned int alertStyle:3;
    unsigned int dontDimBackground:1;
    unsigned int dismissSuspended:1;
    unsigned int dontBlockInteraction:1;
    unsigned int sheetWasPoppedUp:1;
    unsigned int animating:1;
    unsigned int hideWhenDoneAnimating:1;
    unsigned int layoutWhenDoneAnimating:1;
    unsigned int titleMaxLineCount:2;
    unsigned int bodyTextMaxLineCount:3;
    unsigned int runsModal:1;
    unsigned int runningModal:1;
    unsigned int addedTextView:1;
    unsigned int addedTableShadows:1;
    unsigned int showOverSBAlerts:1;
    unsigned int showMinTableContent:1;
    unsigned int bodyTextTruncated:1;
    unsigned int orientation:3;
    unsigned int delegateBodyTextAlignment:1;
    unsigned int delegateClickedButtonAtIndex:1;
    unsigned int delegateClickedButtonAtIndex2:1;
    unsigned int delegateCancel:1;
    unsigned int delegateCancel2:1;
    unsigned int delegateWillPresent:1;
    unsigned int delegateWillPresent2:1;
    unsigned int delegateDidPresent:1;
    unsigned int delegateDidPresent2:1;
    unsigned int delegateWillDismiss:1;
    unsigned int delegateWillDismiss2:1;
    unsigned int delegateDidDismiss:1;
    unsigned int delegateDidDismiss2:1;
} CDAnonymousStruct7;

typedef struct {
    CDAnonymousStruct10 top;
    struct {
        struct CGRect _field1;
        struct CGRect _field2;
        struct CGRect _field3;
    } middle;
    struct {
        struct CGRect _field1;
        struct CGRect _field2;
        struct CGRect _field3;
    } bottom;
} CDAnonymousStruct12;

typedef struct {
    unsigned char pathIndex;
    unsigned char pathIdentity;
    unsigned char pathProximity;
    float pathPressure;
    float pathMajorRadius;
    struct CGPoint pathLocation;
    struct __GSWindow *pathWindow;
} CDAnonymousStruct13;

typedef struct {
    int count;
    int ids[10];
} CDAnonymousStruct8;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    id _field6;
    id _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    id _field11;
} CDAnonymousStruct9;

typedef struct {
    char _field1;
    union {
        struct {
            id _field1;
            id _field2;
        } _field1;
        struct __GSEvent *_field2;
    } _field2;
} CDAnonymousStruct14;

typedef struct {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    unsigned char _field10;
    unsigned char _field11;
    CDAnonymousStruct13 _field12[0];
} CDAnonymousStruct16;

typedef struct {
    float top;
    float left;
    float bottom;
    float right;
} CDAnonymousStruct2;

typedef struct {
    struct CGRect left;
    struct CGRect middle;
    struct CGRect right;
} CDAnonymousStruct10;

typedef union {
    UIImage *image;
    UIView *view;
} CDAnonymousUnion1;

